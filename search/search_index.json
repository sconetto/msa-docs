{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MSA Docs Neste reposit\u00f3rio encontra-se a inst\u00e2ncia da proposta de documenta\u00e7\u00e3o de microsservi\u00e7os do artigo Microservices Documentation Proposal 1 . Logo a navega\u00e7\u00e3o representa uma inst\u00e2ncia num estudo de caso da API RH, no qual foi objeto de teste para a constru\u00e7\u00e3o do artigo, assim como a valida\u00e7\u00e3o do framework . Abaixo est\u00e1 representado a estrutura dos documentos presentes neste sistema. Estrutura da Documenta\u00e7\u00e3o Solu\u00e7\u00e3o - Documenta\u00e7\u00e3o do n\u00edvel de solu\u00e7\u00e3o do projeto de software. M\u00f3dulos - Documenta\u00e7\u00e3o dos m\u00f3dulos individuais da arquitetura. Interface - Documenta\u00e7\u00e3o das interfaces dos m\u00f3dulos e as intera\u00e7\u00f5es do sistema. Inserir o link do texto completo do artigo. \u21a9","title":"Home"},{"location":"#msa-docs","text":"Neste reposit\u00f3rio encontra-se a inst\u00e2ncia da proposta de documenta\u00e7\u00e3o de microsservi\u00e7os do artigo Microservices Documentation Proposal 1 . Logo a navega\u00e7\u00e3o representa uma inst\u00e2ncia num estudo de caso da API RH, no qual foi objeto de teste para a constru\u00e7\u00e3o do artigo, assim como a valida\u00e7\u00e3o do framework . Abaixo est\u00e1 representado a estrutura dos documentos presentes neste sistema.","title":"MSA Docs"},{"location":"#estrutura-da-documentacao","text":"Solu\u00e7\u00e3o - Documenta\u00e7\u00e3o do n\u00edvel de solu\u00e7\u00e3o do projeto de software. M\u00f3dulos - Documenta\u00e7\u00e3o dos m\u00f3dulos individuais da arquitetura. Interface - Documenta\u00e7\u00e3o das interfaces dos m\u00f3dulos e as intera\u00e7\u00f5es do sistema. Inserir o link do texto completo do artigo. \u21a9","title":"Estrutura da Documenta\u00e7\u00e3o"},{"location":"interfaces/api-register/","text":"Polls Polls is a simple API allowing consumers to view polls and vote in them. You can view this documentation over at Apiary . Polls API Root [/] This resource does not have any attributes. Instead it offers the initial API affordances in the form of the links in the JSON body. It is recommend to follow the \u201curl\u201d link values, Link or Location headers where applicable to retrieve resources. Instead of constructing your own URLs, to keep your client decoupled from implementation details. Retrieve the Entry Point [GET] Response 200 (application/json) 1 2 3 { \"questions_url\" : \"/questions\" } Group Question Resources related to questions in the API. Question [/questions/{question_id}] A Question object has the following attributes: question published_at - An ISO8601 date when the question was published. url choices - An array of Choice objects. Parameters question_id: 1 (required, number) - ID of the Question in form of an integer View a Questions Detail [GET] Response 200 (application/json) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 { \"question\" : \"Favourite programming language?\" , \"published_at\" : \"2014-11-11T08:40:51.620Z\" , \"url\" : \"/questions/1\" , \"choices\" : [ { \"choice\" : \"Swift\" , \"url\" : \"/questions/1/choices/1\" , \"votes\" : 2048 } , { \"choice\" : \"Python\" , \"url\" : \"/questions/1/choices/2\" , \"votes\" : 1024 } , { \"choice\" : \"Objective-C\" , \"url\" : \"/questions/1/choices/3\" , \"votes\" : 512 } , { \"choice\" : \"Ruby\" , \"url\" : \"/questions/1/choices/4\" , \"votes\" : 256 } ] } Choice [/questions/{question_id}/choices/{choice_id}] Parameters question_id: 1 (required, number) - ID of the Question in form of an integer choice_id: 1 (required, number) - ID of the Choice in form of an integer Vote on a Choice [POST] This action allows you to vote on a question's choice. Response 201 Headers 1 Location : / questions / 1 Questions Collection [/questions{?page}] Parameters page: 1 (optional, number) - The page of questions to return List All Questions [GET] Response 200 (application/json) Headers 1 Link : </ questions ? page = 2 > ; rel=\"next\" Body 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 [ { \"question\" : \"Favourite programming language?\" , \"published_at\" : \"2014-11-11T08:40:51.620Z\" , \"url\" : \"/questions/1\" , \"choices\" : [ { \"choice\" : \"Swift\" , \"url\" : \"/questions/1/choices/1\" , \"votes\" : 2048 } , { \"choice\" : \"Python\" , \"url\" : \"/questions/1/choices/2\" , \"votes\" : 1024 } , { \"choice\" : \"Objective-C\" , \"url\" : \"/questions/1/choices/3\" , \"votes\" : 512 } , { \"choice\" : \"Ruby\" , \"url\" : \"/questions/1/choices/4\" , \"votes\" : 256 } ] } ] Create a New Question [POST] You may create your own question using this action. It takes a JSON object containing a question and a collection of answers in the form of choices. question (string) - The question choices (array[string]) - A collection of choices. Request (application/json) 1 2 3 4 5 6 7 8 9 { \"question\" : \"Favourite programming language?\" , \"choices\" : [ \"Swift\" , \"Python\" , \"Objective-C\" , \"Ruby\" ] } Response 201 (application/json) Headers 1 Location : / questions / 2 Body 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 { \"question\" : \"Favourite programming language?\" , \"published_at\" : \"2014-11-11T08:40:51.620Z\" , \"url\" : \"/questions/2\" , \"choices\" : [ { \"choice\" : \"Swift\" , \"url\" : \"/questions/2/choices/1\" , \"votes\" : 0 } , { \"choice\" : \"Python\" , \"url\" : \"/questions/2/choices/2\" , \"votes\" : 0 } , { \"choice\" : \"Objective-C\" , \"url\" : \"/questions/2/choices/3\" , \"votes\" : 0 } , { \"choice\" : \"Ruby\" , \"url\" : \"/questions/2/choices/4\" , \"votes\" : 0 } ] }","title":"Register API Blueprint"},{"location":"interfaces/api-register/#polls","text":"Polls is a simple API allowing consumers to view polls and vote in them. You can view this documentation over at Apiary .","title":"Polls"},{"location":"interfaces/api-register/#polls-api-root","text":"This resource does not have any attributes. Instead it offers the initial API affordances in the form of the links in the JSON body. It is recommend to follow the \u201curl\u201d link values, Link or Location headers where applicable to retrieve resources. Instead of constructing your own URLs, to keep your client decoupled from implementation details.","title":"Polls API Root [/]"},{"location":"interfaces/api-register/#retrieve-the-entry-point-get","text":"Response 200 (application/json) 1 2 3 { \"questions_url\" : \"/questions\" }","title":"Retrieve the Entry Point [GET]"},{"location":"interfaces/api-register/#group-question","text":"Resources related to questions in the API.","title":"Group Question"},{"location":"interfaces/api-register/#question-questionsquestion_id","text":"A Question object has the following attributes: question published_at - An ISO8601 date when the question was published. url choices - An array of Choice objects. Parameters question_id: 1 (required, number) - ID of the Question in form of an integer","title":"Question [/questions/{question_id}]"},{"location":"interfaces/api-register/#view-a-questions-detail-get","text":"Response 200 (application/json) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 { \"question\" : \"Favourite programming language?\" , \"published_at\" : \"2014-11-11T08:40:51.620Z\" , \"url\" : \"/questions/1\" , \"choices\" : [ { \"choice\" : \"Swift\" , \"url\" : \"/questions/1/choices/1\" , \"votes\" : 2048 } , { \"choice\" : \"Python\" , \"url\" : \"/questions/1/choices/2\" , \"votes\" : 1024 } , { \"choice\" : \"Objective-C\" , \"url\" : \"/questions/1/choices/3\" , \"votes\" : 512 } , { \"choice\" : \"Ruby\" , \"url\" : \"/questions/1/choices/4\" , \"votes\" : 256 } ] }","title":"View a Questions Detail [GET]"},{"location":"interfaces/api-register/#choice-questionsquestion_idchoiceschoice_id","text":"Parameters question_id: 1 (required, number) - ID of the Question in form of an integer choice_id: 1 (required, number) - ID of the Choice in form of an integer","title":"Choice [/questions/{question_id}/choices/{choice_id}]"},{"location":"interfaces/api-register/#vote-on-a-choice-post","text":"This action allows you to vote on a question's choice. Response 201 Headers 1 Location : / questions / 1","title":"Vote on a Choice [POST]"},{"location":"interfaces/api-register/#questions-collection-questionspage","text":"Parameters page: 1 (optional, number) - The page of questions to return","title":"Questions Collection [/questions{?page}]"},{"location":"interfaces/api-register/#list-all-questions-get","text":"Response 200 (application/json) Headers 1 Link : </ questions ? page = 2 > ; rel=\"next\" Body 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 [ { \"question\" : \"Favourite programming language?\" , \"published_at\" : \"2014-11-11T08:40:51.620Z\" , \"url\" : \"/questions/1\" , \"choices\" : [ { \"choice\" : \"Swift\" , \"url\" : \"/questions/1/choices/1\" , \"votes\" : 2048 } , { \"choice\" : \"Python\" , \"url\" : \"/questions/1/choices/2\" , \"votes\" : 1024 } , { \"choice\" : \"Objective-C\" , \"url\" : \"/questions/1/choices/3\" , \"votes\" : 512 } , { \"choice\" : \"Ruby\" , \"url\" : \"/questions/1/choices/4\" , \"votes\" : 256 } ] } ]","title":"List All Questions [GET]"},{"location":"interfaces/api-register/#create-a-new-question-post","text":"You may create your own question using this action. It takes a JSON object containing a question and a collection of answers in the form of choices. question (string) - The question choices (array[string]) - A collection of choices. Request (application/json) 1 2 3 4 5 6 7 8 9 { \"question\" : \"Favourite programming language?\" , \"choices\" : [ \"Swift\" , \"Python\" , \"Objective-C\" , \"Ruby\" ] } Response 201 (application/json) Headers 1 Location : / questions / 2 Body 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 { \"question\" : \"Favourite programming language?\" , \"published_at\" : \"2014-11-11T08:40:51.620Z\" , \"url\" : \"/questions/2\" , \"choices\" : [ { \"choice\" : \"Swift\" , \"url\" : \"/questions/2/choices/1\" , \"votes\" : 0 } , { \"choice\" : \"Python\" , \"url\" : \"/questions/2/choices/2\" , \"votes\" : 0 } , { \"choice\" : \"Objective-C\" , \"url\" : \"/questions/2/choices/3\" , \"votes\" : 0 } , { \"choice\" : \"Ruby\" , \"url\" : \"/questions/2/choices/4\" , \"votes\" : 0 } ] }","title":"Create a New Question [POST]"},{"location":"modules/api-register/","text":"API RH - Cadastro Ainda assim, existem d\u00favidas a respeito de como a determina\u00e7\u00e3o clara de objetivos acarreta um processo de reformula\u00e7\u00e3o e moderniza\u00e7\u00e3o das posturas dos \u00f3rg\u00e3os dirigentes com rela\u00e7\u00e3o \u00e0s suas atribui\u00e7\u00f5es. 1 Depend\u00eancias Python 3.7.3 Flask 1.1.1 Configura\u00e7\u00e3o A configura\u00e7\u00e3o da API de Cadastro se d\u00e1 por meio de vari\u00e1veis de ambiente do sistema operacional. Portanto a configura\u00e7\u00e3o dever\u00e1 ser feita no host ou dever\u00e1 ser passada para o ambiente do container . As configura\u00e7\u00f5es dispon\u00edveis s\u00e3o: HTTP_PORT : N\u00famero da porta HTTP no qual o servi\u00e7o ser\u00e1 disponibilizado. DATABASE_HOST : Endere\u00e7o de rede do servidor do banco de dados. DATABASE_PORT : Porta no qual o servi\u00e7o de banco de dados est\u00e1 dispon\u00edvel. DATABASE_NAME : Nome do schema dispon\u00edvel para o servi\u00e7o. DATABASE_USER : Nome do usu\u00e1rio para autentica\u00e7\u00e3o no banco de dados. DATABASE_PASSWORD : Senha do usu\u00e1rio para autentica\u00e7\u00e3o no banco de dados. Caso tenha d\u00favidas de como configurar vari\u00e1veis de ambiente verifique em: Vari\u00e1veis de Ambiente - Linux Vari\u00e1veis de Ambiente - Docker OBS : Lembrando que o sistema foi desenvolvido para execu\u00e7\u00e3o em ambientes Linux e Docker. N\u00e3o h\u00e1 suporte oficial para Windows. Desenvolvimento Instalando o VirtualEnvWrapper Recomendados a utiliza\u00e7\u00e3o de um ambiente virtual criado pelo m\u00f3dulo virtualenvwrapper. Existe um s\u00edtio virtual com instru\u00e7\u00f5es em ingl\u00eas para a instala\u00e7\u00e3o que pode ser acessado aqui . Mas voc\u00ea pode tamb\u00e9m seguir o roteiro abaixo para a instala\u00e7\u00e3o do ambiente: 1 2 sudo python3 -m pip install -U pip # Faz a atualiza\u00e7\u00e3o do pip sudo python3 -m pip install virtualenvwrapper # Instala o m\u00f3dulo virtualenvwrapper OBS : Caso n\u00e3o tenha acesso de administrador na m\u00e1quina remova o sudo do in\u00edcio do comando e adicione a flag --user ao final do comando. Agora configure o seu shell para utilizar o virtualenvwrapper , adicionando essas duas linhas ao arquivo de inicializa\u00e7\u00e3o do seu shell ( .bashrc , .profile , etc.) 1 2 export WORKON_HOME = \\$ HOME/.virtualenvs source /usr/local/bin/virtualenvwrapper.sh Caso queira adicionar um local espec\u00edfico de projeto basta adicionar uma terceira linha com o seguinte export : 1 export PROJECT_HOME = /path/to/project Execute o arquivo de inicializa\u00e7\u00e3o do shell para que as mudan\u00e7as surtam efeito, por exemplo: 1 source ~/.bashrc Agora crie um ambiente virtual com o seguinte comando (colocando o nome que deseja para o ambiente), neste exemplo usarei o nome register : 1 mkvirtualenv -p $( which python3 ) register Para utiliz\u00e1-lo: 1 2 3 workon register sudo python3 -m pip install pipenv pipenv install # Ir\u00e1 instalar todas as depend\u00eancias usadas no projeto OBS: Novamente, caso necess\u00e1rio, adicione a flag --user para fazer a instala\u00e7\u00e3o do pacote do pipenv. Execu\u00e7\u00e3o Local Para execu\u00e7\u00e3o local do sistema, rode o seguinte comando na pasta ra\u00edz do projeto (considerando que a virtualenv j\u00e1 esteja ativa): 1 python src/main.py Com isso o sistema ser\u00e1 executado no localhost e estar\u00e1 dispon\u00edvel na porta HTTP_PORT configurada para o sistema. Dessa forma \u00e9 poss\u00edvel testar as novas implementa\u00e7\u00f5es. Testes Para executar os testes da API Register siga o roteiro abaixo descrito: Ative a virtualenv register ; Garanta que as depend\u00eancias estejam instaladas, principalmente: 1 2 3 pytest pytest - coverage flake8 Execute os comandos abaixo: 1 2 3 4 5 6 export PYTHONPATH = $( pwd ) # Define path do python pytest src/ # Executa os testes pytest --cov = register src/ # Executa os testes avaliando a cobertura pytest --cov = register --cov-report xml src/ # Gera o relat\u00f3rio em XML da cobertura flake8 src/ # Roda o linter do PEP8 unset PYTHONPATH # Remove a vari\u00e1vel PYTHONPATH Durante os testes o terminal apresentar\u00e1 um output com o relat\u00f3rio dos testes (falhas, skips e sucessos) e a cobertura de testes do sistema. Para outras configura\u00e7\u00f5es e documenta\u00e7\u00e3o complementar acesse pytest e coverage . Durante o processo de lint o terminal apresentar\u00e1 um relat\u00f3rio com erros e warnings do guia de estilo do PEP8, para mais configura\u00e7\u00f5es e a documenta\u00e7\u00e3o complementar acesse flake8 e PEP8 Constru\u00e7\u00e3o Para fazer a constru\u00e7\u00e3o do servi\u00e7o do API Register basta seguir o roteiro abaixo: 1 docker build -t api-register:<version> . Definindo a vers\u00e3o em < version > . E.g.: latest , stable , alpha , 1 . 0 . 0 e etc. Verifique se foi feito o login no servi\u00e7o do docker hub , caso n\u00e3o execute o comando do docker login . 1 docker push api-register:<version> Por fim, caso a execu\u00e7\u00e3o do sistema ser\u00e1 feita pelo container docker constru\u00eddo execute: 1 docker run -d --name api-register -e .env api-register OBS : Pressup\u00f5e que as configura\u00e7\u00f5es est\u00e3o listadas no arquivo .env . Para mais configura\u00e7\u00f5es, op\u00e7\u00f5es de execu\u00e7\u00e3o e a documenta\u00e7\u00e3o complementar acesse Docker Gerado no Lero Lero \u21a9","title":"Register"},{"location":"modules/api-register/#api-rh-cadastro","text":"Ainda assim, existem d\u00favidas a respeito de como a determina\u00e7\u00e3o clara de objetivos acarreta um processo de reformula\u00e7\u00e3o e moderniza\u00e7\u00e3o das posturas dos \u00f3rg\u00e3os dirigentes com rela\u00e7\u00e3o \u00e0s suas atribui\u00e7\u00f5es. 1","title":"API RH - Cadastro"},{"location":"modules/api-register/#dependencias","text":"Python 3.7.3 Flask 1.1.1","title":"Depend\u00eancias"},{"location":"modules/api-register/#configuracao","text":"A configura\u00e7\u00e3o da API de Cadastro se d\u00e1 por meio de vari\u00e1veis de ambiente do sistema operacional. Portanto a configura\u00e7\u00e3o dever\u00e1 ser feita no host ou dever\u00e1 ser passada para o ambiente do container . As configura\u00e7\u00f5es dispon\u00edveis s\u00e3o: HTTP_PORT : N\u00famero da porta HTTP no qual o servi\u00e7o ser\u00e1 disponibilizado. DATABASE_HOST : Endere\u00e7o de rede do servidor do banco de dados. DATABASE_PORT : Porta no qual o servi\u00e7o de banco de dados est\u00e1 dispon\u00edvel. DATABASE_NAME : Nome do schema dispon\u00edvel para o servi\u00e7o. DATABASE_USER : Nome do usu\u00e1rio para autentica\u00e7\u00e3o no banco de dados. DATABASE_PASSWORD : Senha do usu\u00e1rio para autentica\u00e7\u00e3o no banco de dados. Caso tenha d\u00favidas de como configurar vari\u00e1veis de ambiente verifique em: Vari\u00e1veis de Ambiente - Linux Vari\u00e1veis de Ambiente - Docker OBS : Lembrando que o sistema foi desenvolvido para execu\u00e7\u00e3o em ambientes Linux e Docker. N\u00e3o h\u00e1 suporte oficial para Windows.","title":"Configura\u00e7\u00e3o"},{"location":"modules/api-register/#desenvolvimento","text":"","title":"Desenvolvimento"},{"location":"modules/api-register/#instalando-o-virtualenvwrapper","text":"Recomendados a utiliza\u00e7\u00e3o de um ambiente virtual criado pelo m\u00f3dulo virtualenvwrapper. Existe um s\u00edtio virtual com instru\u00e7\u00f5es em ingl\u00eas para a instala\u00e7\u00e3o que pode ser acessado aqui . Mas voc\u00ea pode tamb\u00e9m seguir o roteiro abaixo para a instala\u00e7\u00e3o do ambiente: 1 2 sudo python3 -m pip install -U pip # Faz a atualiza\u00e7\u00e3o do pip sudo python3 -m pip install virtualenvwrapper # Instala o m\u00f3dulo virtualenvwrapper OBS : Caso n\u00e3o tenha acesso de administrador na m\u00e1quina remova o sudo do in\u00edcio do comando e adicione a flag --user ao final do comando. Agora configure o seu shell para utilizar o virtualenvwrapper , adicionando essas duas linhas ao arquivo de inicializa\u00e7\u00e3o do seu shell ( .bashrc , .profile , etc.) 1 2 export WORKON_HOME = \\$ HOME/.virtualenvs source /usr/local/bin/virtualenvwrapper.sh Caso queira adicionar um local espec\u00edfico de projeto basta adicionar uma terceira linha com o seguinte export : 1 export PROJECT_HOME = /path/to/project Execute o arquivo de inicializa\u00e7\u00e3o do shell para que as mudan\u00e7as surtam efeito, por exemplo: 1 source ~/.bashrc Agora crie um ambiente virtual com o seguinte comando (colocando o nome que deseja para o ambiente), neste exemplo usarei o nome register : 1 mkvirtualenv -p $( which python3 ) register Para utiliz\u00e1-lo: 1 2 3 workon register sudo python3 -m pip install pipenv pipenv install # Ir\u00e1 instalar todas as depend\u00eancias usadas no projeto OBS: Novamente, caso necess\u00e1rio, adicione a flag --user para fazer a instala\u00e7\u00e3o do pacote do pipenv.","title":"Instalando o VirtualEnvWrapper"},{"location":"modules/api-register/#execucao-local","text":"Para execu\u00e7\u00e3o local do sistema, rode o seguinte comando na pasta ra\u00edz do projeto (considerando que a virtualenv j\u00e1 esteja ativa): 1 python src/main.py Com isso o sistema ser\u00e1 executado no localhost e estar\u00e1 dispon\u00edvel na porta HTTP_PORT configurada para o sistema. Dessa forma \u00e9 poss\u00edvel testar as novas implementa\u00e7\u00f5es.","title":"Execu\u00e7\u00e3o Local"},{"location":"modules/api-register/#testes","text":"Para executar os testes da API Register siga o roteiro abaixo descrito: Ative a virtualenv register ; Garanta que as depend\u00eancias estejam instaladas, principalmente: 1 2 3 pytest pytest - coverage flake8 Execute os comandos abaixo: 1 2 3 4 5 6 export PYTHONPATH = $( pwd ) # Define path do python pytest src/ # Executa os testes pytest --cov = register src/ # Executa os testes avaliando a cobertura pytest --cov = register --cov-report xml src/ # Gera o relat\u00f3rio em XML da cobertura flake8 src/ # Roda o linter do PEP8 unset PYTHONPATH # Remove a vari\u00e1vel PYTHONPATH Durante os testes o terminal apresentar\u00e1 um output com o relat\u00f3rio dos testes (falhas, skips e sucessos) e a cobertura de testes do sistema. Para outras configura\u00e7\u00f5es e documenta\u00e7\u00e3o complementar acesse pytest e coverage . Durante o processo de lint o terminal apresentar\u00e1 um relat\u00f3rio com erros e warnings do guia de estilo do PEP8, para mais configura\u00e7\u00f5es e a documenta\u00e7\u00e3o complementar acesse flake8 e PEP8","title":"Testes"},{"location":"modules/api-register/#construcao","text":"Para fazer a constru\u00e7\u00e3o do servi\u00e7o do API Register basta seguir o roteiro abaixo: 1 docker build -t api-register:<version> . Definindo a vers\u00e3o em < version > . E.g.: latest , stable , alpha , 1 . 0 . 0 e etc. Verifique se foi feito o login no servi\u00e7o do docker hub , caso n\u00e3o execute o comando do docker login . 1 docker push api-register:<version> Por fim, caso a execu\u00e7\u00e3o do sistema ser\u00e1 feita pelo container docker constru\u00eddo execute: 1 docker run -d --name api-register -e .env api-register OBS : Pressup\u00f5e que as configura\u00e7\u00f5es est\u00e3o listadas no arquivo .env . Para mais configura\u00e7\u00f5es, op\u00e7\u00f5es de execu\u00e7\u00e3o e a documenta\u00e7\u00e3o complementar acesse Docker Gerado no Lero Lero \u21a9","title":"Constru\u00e7\u00e3o"},{"location":"project/about-rh/","text":"About RH Project Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce in dapibus ipsum. Nam eu dignissim nulla. Pellentesque sed pretium ex. Nullam eget fermentum enim, eget facilisis arcu. In lobortis accumsan libero a maximus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum posuere ut leo et pulvinar. Aenean id condimentum ex. Proin tempor egestas enim, eget condimentum risus tempus sit amet. Quisque et tellus vitae lacus dignissim posuere sed fermentum lacus. Aliquam at eros vel leo semper fermentum non eu quam. Sed et sapien malesuada leo semper dignissim. Phasellus tincidunt ligula aliquam felis sagittis tempor. Phasellus id lorem eget erat luctus interdum at eu eros. Duis congue dapibus mauris, condimentum imperdiet ante eleifend non. Maecenas mattis viverra lorem et hendrerit. Phasellus vel pulvinar lacus.","title":"About"},{"location":"project/about-rh/#about-rh-project","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce in dapibus ipsum. Nam eu dignissim nulla. Pellentesque sed pretium ex. Nullam eget fermentum enim, eget facilisis arcu. In lobortis accumsan libero a maximus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum posuere ut leo et pulvinar. Aenean id condimentum ex. Proin tempor egestas enim, eget condimentum risus tempus sit amet. Quisque et tellus vitae lacus dignissim posuere sed fermentum lacus. Aliquam at eros vel leo semper fermentum non eu quam. Sed et sapien malesuada leo semper dignissim. Phasellus tincidunt ligula aliquam felis sagittis tempor. Phasellus id lorem eget erat luctus interdum at eu eros. Duis congue dapibus mauris, condimentum imperdiet ante eleifend non. Maecenas mattis viverra lorem et hendrerit. Phasellus vel pulvinar lacus.","title":"About RH Project"}]}